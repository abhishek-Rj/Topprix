import { useState, useRef } from "react";
import { useFirebase } from "../context/firebaseProvider";
import { useNavigate } from "react-router-dom";
import { FiMail, FiPhone, FiLock } from "react-icons/fi";
import { ReactTyped } from "react-typed";
import { MdOutlinePerson } from "react-icons/md";
import { useTranslation } from "react-i18next";
import GoogleAuthButton from "../components/googleAuthButton";
import FacebookAuthButton from "../components/facebookAuthButton";
import Input from "../components/Input";
import { toast } from "react-toastify";
import baseUrl from "@/hooks/baseurl";

export default function Signup() {
  const [name, setName] = useState<string>("");
  const [email, setEmail] = useState<string>("");
  const [phone, setPhone] = useState<string>("");
  const [countryCode, setCountryCode] = useState<string>("+230");
  const [password, setPassword] = useState<string>("");
  const [error, setError] = useState<string | null>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const [emailError, setEmailError] = useState<boolean>(false);
  const [phoneError, setPhoneError] = useState<boolean>(false);
  const [passwordError, setPasswordError] = useState<boolean>(false);
  const [roleError, setRoleError] = useState<boolean>(false);

  const roleRef = useRef<HTMLSelectElement>(null);
  const { signUpUserWithEmailAndPassword } = useFirebase();
  const navigate = useNavigate();
  const { t } = useTranslation();

  const validateEmail = (email: string): boolean => {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  };

  const handleSignUp = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    setEmailError(false);
    setPasswordError(false);
    setRoleError(false);

    if (!validateEmail(email)) {
      setEmailError(true);
      setError("Please enter a valid email.");
      setLoading(false);
      return;
    }

    if (password.length < 6) {
      setPasswordError(true);
      setError("Password must be at least 6 characters long.");
      setLoading(false);
      return;
    }

    if (!roleRef.current?.value) {
      setRoleError(true);
      setError("Please select a role.");
      setLoading(false);
      return;
    }

    try {
      const checkUserResponse = await fetch(`${baseUrl}user/${email}`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          "user-email": email,
        },
      });

      if (checkUserResponse.ok) {
        const existingUser = await checkUserResponse.json();

        if (existingUser) {
          setError(
            "An account with this email already exists. Please login instead."
          );
          setLoading(false);
          return;
        }
      }

      // Combine country code with phone number
      const fullPhoneNumber = `${countryCode}${phone}`;

      // Create user in Firebase first
      const userCredential = await signUpUserWithEmailAndPassword(
        name,
        email,
        fullPhoneNumber,
        password,
        roleRef.current.value
      );

      if (!userCredential || !userCredential.user) {
        throw new Error("Failed to create Firebase user");
      }

      // Store user email in localStorage for API requests
      localStorage.setItem("userEmail", email);

      const registerUserResponse = await fetch(`${baseUrl}register`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "user-email": email,
        },
        body: JSON.stringify({
          username: name,
          email,
          phone: fullPhoneNumber,
          role: roleRef.current.value,
        }),
      });

      const data = await registerUserResponse.json();
      if (!data.user) {
        // If database registration fails, delete the Firebase user
        try {
          await userCredential.user.delete();
        } catch (deleteErr) {
          console.error(
            "Error deleting Firebase user after database failure:",
            deleteErr
          );
        }
        throw new Error("Failed to register user in database");
      }

      toast.success("Account created successfully! Please login.");
      navigate("/login");
    } catch (error: any) {
      console.error("Error during sign-up:", error);

      // Handle specific Firebase errors
      if (error.code === "auth/email-already-in-use") {
        setError(
          "An account with this email already exists. Please login instead."
        );
      } else if (error.code === "auth/weak-password") {
        setPasswordError(true);
        setError("Password is too weak. Please choose a stronger password.");
      } else if (error.code === "auth/invalid-email") {
        setEmailError(true);
        setError("Please enter a valid email address.");
      } else {
        setError("Failed to create account. Please try again.");
      }
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-yellow-50 p-4">
      <div className="max-w-5xl w-full flex flex-col md:flex-row gap-6">
        {/* Left Side */}
        <div className="flex flex-col p-6 md:p-10 bg-yellow-600 rounded-xl shadow-xl w-full md:w-1/2 relative">
          <div className="flex items-center space-x-2 md:absolute top-5 left-5">
            <img
              src="/topprix.mu.png"
              width={50}
              height={50}
              alt="Topprix.mu"
              className="rounded-lg p-1 bg-yellow-200 hover:scale-105 transition-transform"
            />
            <div className="font-sans text-2xl md:text-3xl font-bold text-white hover:scale-105 transition-transform">
              Topprix.mu
            </div>
          </div>

          <div className="flex md:hidden justify-center items-center mt-6">
            <h2 className="text-lg font-bold text-white text-center">
              {t("allBest")}{" "}
              <span className="text-black min-w-[100px] inline-block text-center whitespace-nowrap">
                <ReactTyped
                  strings={[t("discount"), t("offer")]}
                  typeSpeed={100}
                  backSpeed={50}
                  backDelay={1000}
                  loop
                />
              </span>{" "}
              , {t("onePlace")}
            </h2>
          </div>

          <div className="hidden md:flex flex-col justify-center h-full mt-10">
            <h2 className="text-3xl font-bold text-white">
              {t("allBest")}{" "}
              <ReactTyped
                strings={[t("discount"), t("offer")]}
                typeSpeed={100}
                backSpeed={50}
                backDelay={1000}
                loop
                className="text-black"
              />
              , {t("onePlace")}
            </h2>
            <p className="mt-4 text-white text-lg">{t("shortDescription")}</p>
          </div>
        </div>

        <div className="w-full md:w-1/2 p-8 bg-white rounded-xl shadow-xl">
          <h2 className="text-2xl font-bold text-gray-800 text-center">
            {t("createAccount")}
          </h2>
          <p className="text-center hover:scale-105 transition-transform  text-gray-600 mt-2">
            {t("accountExist")}{" "}
            <a href="/login" className="text-yellow-600  hover:underline">
              {t("signIn")}
            </a>
          </p>

          <form className="mt-6 space-y-4" onSubmit={handleSignUp}>
            {error && (
              <p className="text-red-600 bg-red-300 rounded-md text-sm p-2">
                {error}
              </p>
            )}

            <div className="relative">
              <MdOutlinePerson className="absolute hover:scale-110 transition-transform left-3 top-3 text-gray-400" />
              <Input value={name} setValue={setName} placeholder={t("name")} />
            </div>

            <div className="relative">
              <FiMail className="absolute hover:scale-110 transition-transform left-3 top-3 text-gray-400" />
              <Input
                value={email}
                setValue={setEmail}
                className={emailError ? "border-red-500" : ""}
                type="email"
                placeholder={t("email")}
              />
            </div>

            <div className="relative flex gap-2">
              <div className="relative w-36">
                <FiPhone className="absolute hover:scale-110 transition-transform left-3 top-3 text-gray-400 pointer-events-none" />
                <select
                  value={countryCode}
                  onChange={(e) => setCountryCode(e.target.value)}
                  className={`w-full pl-10 pr-2 p-2 border rounded-md focus:ring-yellow-500 focus:border-yellow-500 ${
                    phoneError ? "border-red-500" : ""
                  }`}
                >
                  <option value="+230">ðŸ‡²ðŸ‡º +230 Mauritius</option>
                  <option value="+262">ðŸ‡·ðŸ‡ª +262 RÃ©union</option>
                  <option value="+33">ðŸ‡«ðŸ‡· +33 France</option>
                  <option value="+1">ðŸ‡ºðŸ‡¸ +1 USA/Canada</option>
                  <option value="+44">ðŸ‡¬ðŸ‡§ +44 UK</option>
                  <option value="+213">ðŸ‡©ðŸ‡¿ +213 Algeria</option>
                  <option value="+376">ðŸ‡¦ðŸ‡© +376 Andorra</option>
                  <option value="+244">ðŸ‡¦ðŸ‡´ +244 Angola</option>
                  <option value="+54">ðŸ‡¦ðŸ‡· +54 Argentina</option>
                  <option value="+374">ðŸ‡¦ðŸ‡² +374 Armenia</option>
                  <option value="+61">ðŸ‡¦ðŸ‡º +61 Australia</option>
                  <option value="+43">ðŸ‡¦ðŸ‡¹ +43 Austria</option>
                  <option value="+994">ðŸ‡¦ðŸ‡¿ +994 Azerbaijan</option>
                  <option value="+973">ðŸ‡§ðŸ‡­ +973 Bahrain</option>
                  <option value="+880">ðŸ‡§ðŸ‡© +880 Bangladesh</option>
                  <option value="+375">ðŸ‡§ðŸ‡¾ +375 Belarus</option>
                  <option value="+32">ðŸ‡§ðŸ‡ª +32 Belgium</option>
                  <option value="+229">ðŸ‡§ðŸ‡¯ +229 Benin</option>
                  <option value="+975">ðŸ‡§ðŸ‡¹ +975 Bhutan</option>
                  <option value="+591">ðŸ‡§ðŸ‡´ +591 Bolivia</option>
                  <option value="+387">ðŸ‡§ðŸ‡¦ +387 Bosnia</option>
                  <option value="+267">ðŸ‡§ðŸ‡¼ +267 Botswana</option>
                  <option value="+55">ðŸ‡§ðŸ‡· +55 Brazil</option>
                  <option value="+673">ðŸ‡§ðŸ‡³ +673 Brunei</option>
                  <option value="+359">ðŸ‡§ðŸ‡¬ +359 Bulgaria</option>
                  <option value="+226">ðŸ‡§ðŸ‡« +226 Burkina Faso</option>
                  <option value="+257">ðŸ‡§ðŸ‡® +257 Burundi</option>
                  <option value="+855">ðŸ‡°ðŸ‡­ +855 Cambodia</option>
                  <option value="+237">ðŸ‡¨ðŸ‡² +237 Cameroon</option>
                  <option value="+238">ðŸ‡¨ðŸ‡» +238 Cape Verde</option>
                  <option value="+236">ðŸ‡¨ðŸ‡« +236 Central African Rep</option>
                  <option value="+235">ðŸ‡¹ðŸ‡© +235 Chad</option>
                  <option value="+56">ðŸ‡¨ðŸ‡± +56 Chile</option>
                  <option value="+86">ðŸ‡¨ðŸ‡³ +86 China</option>
                  <option value="+57">ðŸ‡¨ðŸ‡´ +57 Colombia</option>
                  <option value="+269">ðŸ‡°ðŸ‡² +269 Comoros</option>
                  <option value="+242">ðŸ‡¨ðŸ‡¬ +242 Congo</option>
                  <option value="+243">ðŸ‡¨ðŸ‡© +243 DR Congo</option>
                  <option value="+506">ðŸ‡¨ðŸ‡· +506 Costa Rica</option>
                  <option value="+225">ðŸ‡¨ðŸ‡® +225 CÃ´te d'Ivoire</option>
                  <option value="+385">ðŸ‡­ðŸ‡· +385 Croatia</option>
                  <option value="+53">ðŸ‡¨ðŸ‡º +53 Cuba</option>
                  <option value="+357">ðŸ‡¨ðŸ‡¾ +357 Cyprus</option>
                  <option value="+420">ðŸ‡¨ðŸ‡¿ +420 Czech Republic</option>
                  <option value="+45">ðŸ‡©ðŸ‡° +45 Denmark</option>
                  <option value="+253">ðŸ‡©ðŸ‡¯ +253 Djibouti</option>
                  <option value="+593">ðŸ‡ªðŸ‡¨ +593 Ecuador</option>
                  <option value="+20">ðŸ‡ªðŸ‡¬ +20 Egypt</option>
                  <option value="+503">ðŸ‡¸ðŸ‡» +503 El Salvador</option>
                  <option value="+240">ðŸ‡¬ðŸ‡¶ +240 Equatorial Guinea</option>
                  <option value="+291">ðŸ‡ªðŸ‡· +291 Eritrea</option>
                  <option value="+372">ðŸ‡ªðŸ‡ª +372 Estonia</option>
                  <option value="+251">ðŸ‡ªðŸ‡¹ +251 Ethiopia</option>
                  <option value="+358">ðŸ‡«ðŸ‡® +358 Finland</option>
                  <option value="+241">ðŸ‡¬ðŸ‡¦ +241 Gabon</option>
                  <option value="+220">ðŸ‡¬ðŸ‡² +220 Gambia</option>
                  <option value="+995">ðŸ‡¬ðŸ‡ª +995 Georgia</option>
                  <option value="+49">ðŸ‡©ðŸ‡ª +49 Germany</option>
                  <option value="+233">ðŸ‡¬ðŸ‡­ +233 Ghana</option>
                  <option value="+30">ðŸ‡¬ðŸ‡· +30 Greece</option>
                  <option value="+502">ðŸ‡¬ðŸ‡¹ +502 Guatemala</option>
                  <option value="+224">ðŸ‡¬ðŸ‡³ +224 Guinea</option>
                  <option value="+245">ðŸ‡¬ðŸ‡¼ +245 Guinea-Bissau</option>
                  <option value="+592">ðŸ‡¬ðŸ‡¾ +592 Guyana</option>
                  <option value="+509">ðŸ‡­ðŸ‡¹ +509 Haiti</option>
                  <option value="+504">ðŸ‡­ðŸ‡³ +504 Honduras</option>
                  <option value="+852">ðŸ‡­ðŸ‡° +852 Hong Kong</option>
                  <option value="+36">ðŸ‡­ðŸ‡º +36 Hungary</option>
                  <option value="+354">ðŸ‡®ðŸ‡¸ +354 Iceland</option>
                  <option value="+91">ðŸ‡®ðŸ‡³ +91 India</option>
                  <option value="+62">ðŸ‡®ðŸ‡© +62 Indonesia</option>
                  <option value="+98">ðŸ‡®ðŸ‡· +98 Iran</option>
                  <option value="+964">ðŸ‡®ðŸ‡¶ +964 Iraq</option>
                  <option value="+353">ðŸ‡®ðŸ‡ª +353 Ireland</option>
                  <option value="+972">ðŸ‡®ðŸ‡± +972 Israel</option>
                  <option value="+39">ðŸ‡®ðŸ‡¹ +39 Italy</option>
                  <option value="+876">ðŸ‡¯ðŸ‡² +876 Jamaica</option>
                  <option value="+81">ðŸ‡¯ðŸ‡µ +81 Japan</option>
                  <option value="+962">ðŸ‡¯ðŸ‡´ +962 Jordan</option>
                  <option value="+7">ðŸ‡°ðŸ‡¿ +7 Kazakhstan</option>
                  <option value="+254">ðŸ‡°ðŸ‡ª +254 Kenya</option>
                  <option value="+965">ðŸ‡°ðŸ‡¼ +965 Kuwait</option>
                  <option value="+996">ðŸ‡°ðŸ‡¬ +996 Kyrgyzstan</option>
                  <option value="+856">ðŸ‡±ðŸ‡¦ +856 Laos</option>
                  <option value="+371">ðŸ‡±ðŸ‡» +371 Latvia</option>
                  <option value="+961">ðŸ‡±ðŸ‡§ +961 Lebanon</option>
                  <option value="+266">ðŸ‡±ðŸ‡¸ +266 Lesotho</option>
                  <option value="+231">ðŸ‡±ðŸ‡· +231 Liberia</option>
                  <option value="+218">ðŸ‡±ðŸ‡¾ +218 Libya</option>
                  <option value="+423">ðŸ‡±ðŸ‡® +423 Liechtenstein</option>
                  <option value="+370">ðŸ‡±ðŸ‡¹ +370 Lithuania</option>
                  <option value="+352">ðŸ‡±ðŸ‡º +352 Luxembourg</option>
                  <option value="+853">ðŸ‡²ðŸ‡´ +853 Macau</option>
                  <option value="+261">ðŸ‡²ðŸ‡¬ +261 Madagascar</option>
                  <option value="+265">ðŸ‡²ðŸ‡¼ +265 Malawi</option>
                  <option value="+60">ðŸ‡²ðŸ‡¾ +60 Malaysia</option>
                  <option value="+960">ðŸ‡²ðŸ‡» +960 Maldives</option>
                  <option value="+223">ðŸ‡²ðŸ‡± +223 Mali</option>
                  <option value="+356">ðŸ‡²ðŸ‡¹ +356 Malta</option>
                  <option value="+222">ðŸ‡²ðŸ‡· +222 Mauritania</option>
                  <option value="+52">ðŸ‡²ðŸ‡½ +52 Mexico</option>
                  <option value="+373">ðŸ‡²ðŸ‡© +373 Moldova</option>
                  <option value="+377">ðŸ‡²ðŸ‡¨ +377 Monaco</option>
                  <option value="+976">ðŸ‡²ðŸ‡³ +976 Mongolia</option>
                  <option value="+382">ðŸ‡²ðŸ‡ª +382 Montenegro</option>
                  <option value="+212">ðŸ‡²ðŸ‡¦ +212 Morocco</option>
                  <option value="+258">ðŸ‡²ðŸ‡¿ +258 Mozambique</option>
                  <option value="+95">ðŸ‡²ðŸ‡² +95 Myanmar</option>
                  <option value="+264">ðŸ‡³ðŸ‡¦ +264 Namibia</option>
                  <option value="+977">ðŸ‡³ðŸ‡µ +977 Nepal</option>
                  <option value="+31">ðŸ‡³ðŸ‡± +31 Netherlands</option>
                  <option value="+64">ðŸ‡³ðŸ‡¿ +64 New Zealand</option>
                  <option value="+505">ðŸ‡³ðŸ‡® +505 Nicaragua</option>
                  <option value="+227">ðŸ‡³ðŸ‡ª +227 Niger</option>
                  <option value="+234">ðŸ‡³ðŸ‡¬ +234 Nigeria</option>
                  <option value="+850">ðŸ‡°ðŸ‡µ +850 North Korea</option>
                  <option value="+389">ðŸ‡²ðŸ‡° +389 North Macedonia</option>
                  <option value="+47">ðŸ‡³ðŸ‡´ +47 Norway</option>
                  <option value="+968">ðŸ‡´ðŸ‡² +968 Oman</option>
                  <option value="+92">ðŸ‡µðŸ‡° +92 Pakistan</option>
                  <option value="+970">ðŸ‡µðŸ‡¸ +970 Palestine</option>
                  <option value="+507">ðŸ‡µðŸ‡¦ +507 Panama</option>
                  <option value="+675">ðŸ‡µðŸ‡¬ +675 Papua New Guinea</option>
                  <option value="+595">ðŸ‡µðŸ‡¾ +595 Paraguay</option>
                  <option value="+51">ðŸ‡µðŸ‡ª +51 Peru</option>
                  <option value="+63">ðŸ‡µðŸ‡­ +63 Philippines</option>
                  <option value="+48">ðŸ‡µðŸ‡± +48 Poland</option>
                  <option value="+351">ðŸ‡µðŸ‡¹ +351 Portugal</option>
                  <option value="+974">ðŸ‡¶ðŸ‡¦ +974 Qatar</option>
                  <option value="+40">ðŸ‡·ðŸ‡´ +40 Romania</option>
                  <option value="+7">ðŸ‡·ðŸ‡º +7 Russia</option>
                  <option value="+250">ðŸ‡·ðŸ‡¼ +250 Rwanda</option>
                  <option value="+966">ðŸ‡¸ðŸ‡¦ +966 Saudi Arabia</option>
                  <option value="+221">ðŸ‡¸ðŸ‡³ +221 Senegal</option>
                  <option value="+381">ðŸ‡·ðŸ‡¸ +381 Serbia</option>
                  <option value="+248">ðŸ‡¸ðŸ‡¨ +248 Seychelles</option>
                  <option value="+232">ðŸ‡¸ðŸ‡± +232 Sierra Leone</option>
                  <option value="+65">ðŸ‡¸ðŸ‡¬ +65 Singapore</option>
                  <option value="+421">ðŸ‡¸ðŸ‡° +421 Slovakia</option>
                  <option value="+386">ðŸ‡¸ðŸ‡® +386 Slovenia</option>
                  <option value="+252">ðŸ‡¸ðŸ‡´ +252 Somalia</option>
                  <option value="+27">ðŸ‡¿ðŸ‡¦ +27 South Africa</option>
                  <option value="+82">ðŸ‡°ðŸ‡· +82 South Korea</option>
                  <option value="+211">ðŸ‡¸ðŸ‡¸ +211 South Sudan</option>
                  <option value="+34">ðŸ‡ªðŸ‡¸ +34 Spain</option>
                  <option value="+94">ðŸ‡±ðŸ‡° +94 Sri Lanka</option>
                  <option value="+249">ðŸ‡¸ðŸ‡© +249 Sudan</option>
                  <option value="+597">ðŸ‡¸ðŸ‡· +597 Suriname</option>
                  <option value="+268">ðŸ‡¸ðŸ‡¿ +268 Eswatini</option>
                  <option value="+46">ðŸ‡¸ðŸ‡ª +46 Sweden</option>
                  <option value="+41">ðŸ‡¨ðŸ‡­ +41 Switzerland</option>
                  <option value="+963">ðŸ‡¸ðŸ‡¾ +963 Syria</option>
                  <option value="+886">ðŸ‡¹ðŸ‡¼ +886 Taiwan</option>
                  <option value="+992">ðŸ‡¹ðŸ‡¯ +992 Tajikistan</option>
                  <option value="+255">ðŸ‡¹ðŸ‡¿ +255 Tanzania</option>
                  <option value="+66">ðŸ‡¹ðŸ‡­ +66 Thailand</option>
                  <option value="+228">ðŸ‡¹ðŸ‡¬ +228 Togo</option>
                  <option value="+216">ðŸ‡¹ðŸ‡³ +216 Tunisia</option>
                  <option value="+90">ðŸ‡¹ðŸ‡· +90 Turkey</option>
                  <option value="+993">ðŸ‡¹ðŸ‡² +993 Turkmenistan</option>
                  <option value="+256">ðŸ‡ºðŸ‡¬ +256 Uganda</option>
                  <option value="+380">ðŸ‡ºðŸ‡¦ +380 Ukraine</option>
                  <option value="+971">ðŸ‡¦ðŸ‡ª +971 UAE</option>
                  <option value="+598">ðŸ‡ºðŸ‡¾ +598 Uruguay</option>
                  <option value="+998">ðŸ‡ºðŸ‡¿ +998 Uzbekistan</option>
                  <option value="+58">ðŸ‡»ðŸ‡ª +58 Venezuela</option>
                  <option value="+84">ðŸ‡»ðŸ‡³ +84 Vietnam</option>
                  <option value="+967">ðŸ‡¾ðŸ‡ª +967 Yemen</option>
                  <option value="+260">ðŸ‡¿ðŸ‡² +260 Zambia</option>
                  <option value="+263">ðŸ‡¿ðŸ‡¼ +263 Zimbabwe</option>
                </select>
              </div>
              <div className="flex-1 relative">
                <Input
                  value={phone}
                  setValue={setPhone}
                  className={phoneError ? "border-red-500" : ""}
                  type="tel"
                  placeholder={t("phone")}
                />
              </div>
            </div>

            <div className="relative">
              <FiLock className="absolute hover:scale-110 transition-transform  left-3 top-3 text-gray-400" />
              <Input
                value={password}
                setValue={setPassword}
                className={passwordError ? "border-red-500 border-2" : ""}
                type="password"
                placeholder={t("password")}
              />
            </div>

            <div className="relative">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                {t("selectRole")}
              </label>
              <select
                ref={roleRef}
                className={`w-full hover:scale-105 transition-transform pl-10 p-2 border rounded-md focus:ring-yellow-500 focus:border-yellow-500 
                                    ${roleError ? "border-red-500" : ""}`}
                required
              >
                <option value="">{t("rolePlaceholder")}</option>
                <option value="USER">{t("customer")}</option>
                <option value="RETAILER">{t("retailer")}</option>
              </select>
            </div>

            {/* Privacy Policy Checkbox */}
            <div className="flex items-center gap-2">
              <input
                type="checkbox"
                id="privacy-policy"
                required
                className="w-4 h-4 text-yellow-600 border-gray-300 rounded focus:ring-yellow-500"
              />
              <label htmlFor="privacy-policy" className="text-xs text-gray-600">
                {t("privacyAccept")}{" "}
                <a
                  href="/privacy"
                  className="text-yellow-600 hover:underline"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {t("privacyPolicy")}
                </a>
              </label>
            </div>

            {/* Terms and Conditions Checkbox */}
            <div className="flex items-center gap-2">
              <input
                type="checkbox"
                id="terms-conditions"
                required
                className="w-4 h-4 text-yellow-600 border-gray-300 rounded focus:ring-yellow-500"
              />
              <label
                htmlFor="terms-conditions"
                className="text-xs text-gray-600"
              >
                {t("termsAccept")}{" "}
                <a
                  href="/terms"
                  className="text-yellow-600 hover:underline"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {t("termsOfUse")}
                </a>
              </label>
            </div>

            {/* General Conditions Checkbox */}
            <div className="flex items-center gap-2">
              <input
                type="checkbox"
                id="general-conditions"
                required
                className="w-4 h-4 text-yellow-600 border-gray-300 rounded focus:ring-yellow-500"
              />
              <label
                htmlFor="general-conditions"
                className="text-xs text-gray-600"
              >
                {t("generalConditionsAccept")}{" "}
                <a
                  href="/general-conditions"
                  className="text-yellow-600 hover:underline"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {t("generalConditions")}
                </a>
              </label>
            </div>

            <button
              type="submit"
              className={`w-full hover:scale-105 transition-transform  py-2 text-white font-semibold rounded-md 
                                ${
                                  loading
                                    ? "bg-yellow-300"
                                    : "bg-yellow-600 hover:bg-yellow-700"
                                }`}
              disabled={loading}
            >
              {loading ? t("creatingAccount") : t("signUp")}
            </button>
          </form>

          <div className="mt-6 relative">
            <div className="absolute inset-0 flex items-center">
              <div className="w-full border-t border-gray-300"></div>
            </div>
            <div className="relative flex justify-center text-sm">
              <span className="px-2 bg-white text-gray-500">
                {t("continueWith")}
              </span>
            </div>
          </div>

          <GoogleAuthButton />
          <FacebookAuthButton />

          {/* Privacy Policy Link */}
          <div className="mt-6 text-center">
            <p className="text-xs text-gray-500">
              {t("accountCreationNote")}{" "}
              <a
                href="/privacy"
                className="text-yellow-600 hover:underline hover:text-yellow-700 transition-colors"
              >
                {t("privacyPolicy")}
              </a>
            </p>
          </div>
        </div>
      </div>
      <div id="recaptcha-container"></div>
    </div>
  );
}
